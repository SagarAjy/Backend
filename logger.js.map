{"version":3,"file":"logger.js","sourceRoot":"","sources":["logger.ts"],"names":[],"mappings":";;;AAAA,qCAA2D;AAE3D,MAAM,MAAM,GAAG,IAAA,sBAAY,EAAC;IAC1B,UAAU,EAAE;QACV,IAAI,oBAAU,CAAC,OAAO,CAAC;YACrB,MAAM,EAAE,gBAAM,CAAC,OAAO,CACpB,gBAAM,CAAC,QAAQ,EAAE,EACjB,gBAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9C,OAAO,IAAI,SAAS,KAAK,KAAK,KAAK,OAAO,EAAE,CAAC;YAC/C,CAAC,CAAC,CACH;SACF,CAAC;QACF,IAAI,oBAAU,CAAC,IAAI,CAAC;YAClB,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,wBAAwB;YAClC,MAAM,EAAE,gBAAM,CAAC,OAAO,CAAC,gBAAM,CAAC,IAAI,EAAE,CAAC;SACtC,CAAC;KACH;IACD,MAAM,EAAE,gBAAM,CAAC,OAAO,CAAC,gBAAM,CAAC,QAAQ,EAAE,EAAE,gBAAM,CAAC,SAAS,EAAE,CAAC;CAC9D,CAAC,CAAC;AAEM,wBAAM","sourcesContent":["import { createLogger, transports, format } from 'winston';\r\n\r\nconst logger = createLogger({\r\n  transports: [\r\n    new transports.Console({\r\n      format: format.combine(\r\n        format.colorize(),\r\n        format.printf(({ timestamp, level, message }) => {\r\n          return `[${timestamp}] ${level}: ${message}`;\r\n        }),\r\n      ),\r\n    }),\r\n    new transports.File({\r\n      dirname: 'logs',\r\n      filename: 'orion_v1_error_log.log',\r\n      format: format.combine(format.json()),\r\n    }),\r\n  ],\r\n  format: format.combine(format.metadata(), format.timestamp()),\r\n});\r\n\r\nexport { logger };\r\n"]}